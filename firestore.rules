rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isAuthenticated() {
        return request.auth != null;
    }

    // Regras para a coleção principal 'users'.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId || isAdmin();
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    // Regra específica para a subcoleção 'collaborators'.
    // Esta regra permite que a empresa (dona do documento) ou um admin gerencie os colaboradores.
    match /users/{companyId}/collaborators/{collaboratorId} {
      allow read, write: if request.auth.uid == companyId || isAdmin();
    }

    match /freights/{freightId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin() || (isAuthenticated() && resource.data.companyId == request.auth.uid);
    }
    
    // Coleções gerenciadas principalmente por Admins
    match /plans/{planId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
    match /vehicles/{vehicleId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
     match /vehicle_types/{typeId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
     match /vehicle_categories/{categoryId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
     match /body_types/{typeId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }
  }
}
