rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      // Check if the user making the request has 'admin' role in their user document.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Publicly readable collections
    match /{collection}/{docId}
    where collection in ['freights', 'plans', 'vehicle_types', 'vehicle_categories', 'body_types'] {
        allow read: if true;
        allow write: if false; // All writes must go through server actions for security
    }

    // Users collection rules
    match /users/{userId} {
      // Any authenticated user can create their own user document during sign-up
      allow create: if isOwner(userId);
      
      // Reading data:
      // - A user can read their own data.
      // - An admin can read any user's data.
      allow read: if isOwner(userId) || isAdmin();
      
      // Updating data:
      // - A user can update their own profile data (specific fields).
      // - An admin can update any user's profile data (specific fields).
      allow update: if (isOwner(userId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly([
          'name', 'tradingName', 'address', 'addressDetails', 'photoURL', 'responsible', 'cnpjCard', 'isCarrier', 'status'
        ])) || (isAdmin() && request.resource.data.diff(resource.data).affectedKeys().hasOnly([
          'name', 'tradingName', 'cnpj', 'address', 'responsible.name', 'responsible.cpf', 'responsible.document', 'cnpjCard', 'status', 'activePlanId', 'activePlanName'
        ]));
    }
  }
}
