rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      // Check if the user document exists and has the 'admin' role.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid != null;
      // Allow user to update their own document, or an admin to update any user document.
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    match /vehicle_types/{typeId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /vehicle_categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /vehicles/{vehicleId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /plans/{planId} {
       allow read: if true;
       allow write: if isAdmin();
    }
    
    match /freights/{freightId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /body_types/{bodyId} {
      allow read: if true;
      allow write: if isAdmin();
    }

  }
}
