
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the users collection
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }

    // Rules for vehicle categories
    match /vehicle_categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Rules for vehicle types
    match /vehicle_types/{typeId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Rules for body types
    match /body_types/{bodyTypeId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Rules for plans
    match /plans/{planId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Rules for vehicles
    match /vehicles/{vehicleId} {
      // For now, only admins can manage vehicles through the admin panel
      // We can add rules for drivers later
      allow read, write: if isAdmin();
    }
    
    // Rules for freights (basic structure)
    match /freights/{freightId} {
        // Allow read for any authenticated user
        allow read: if request.auth != null;
        // Allow write only for admins or the company that owns the freight
        allow write: if isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'company';
    }

  }
}
