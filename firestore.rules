rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId || isAdmin();
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();

      // Permite que a empresa gerencie seus próprios colaboradores
      match /collaborators/{collaboratorId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }

    match /freights/{freightId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin() || (request.auth != null && resource.data.companyId == request.auth.uid);
    }

    // Regra curinga para outras coleções (somente admin pode escrever)
    // NOTA: Esta regra não se aplica a subcoleções de 'users' ou 'freights' porque
    // elas já foram especificadas acima.
    match /{path=**} {
       allow read: if true;
       allow write: if isAdmin();
    }
  }
}
